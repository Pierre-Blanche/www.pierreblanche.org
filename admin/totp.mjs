var m=Object.defineProperty;var b=(n,e,t)=>e in n?m(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var u=(n,e,t)=>b(n,typeof e!="symbol"?e+"":e,t);var c=class{static async generate(e,t){let r={digits:6,algorithm:"SHA-1",encoding:"hex",period:30,timestamp:Date.now(),...t},i=Math.floor(r.timestamp/1e3),a=this.dec2hex(Math.floor(i/r.period)).padStart(16,"0"),s=r.encoding==="hex"?this.base32ToBuffer(e):this.asciiToBuffer(e),h=await this.crypto.importKey("raw",s,{name:"HMAC",hash:{name:r.algorithm}},!1,["sign"]),o=await this.crypto.sign("HMAC",h,this.hex2buf(a)),f=this.buf2hex(o),p=this.hex2dec(f.slice(-1))*2,d=(this.hex2dec(f.slice(p,p+8))&2147483647).toString().slice(-r.digits),g=r.period*1e3,l=Math.ceil((r.timestamp+1)/g)*g;return{otp:d,expires:l}}static hex2dec(e){return parseInt(e,16)}static dec2hex(e){return(e<15.5?"0":"")+Math.round(e).toString(16)}static base32ToBuffer(e){e=e.toUpperCase();let t=e.length;for(;e.charCodeAt(t-1)===61;)t--;let r=t*5/8,i=new Uint8Array(r),a=0,s=0,h=0;for(let o=0;o<t;o++){let f=this.base32[e.charCodeAt(o)];if(f===void 0)throw new Error("Invalid base32 character in key");a=a<<5|f,s+=5,s>=8&&(i[h++]=a>>>(s-=8))}return i.buffer}static asciiToBuffer(e){let t=new Uint8Array(e.length);for(let r=0;r<e.length;r++)t[r]=e.charCodeAt(r);return t.buffer}static hex2buf(e){let t=new Uint8Array(e.length/2);for(let r=0,i=0;r<e.length;r+=2,i++)t[i]=this.hex2dec(e.slice(r,r+2));return t.buffer}static buf2hex(e){return[...new Uint8Array(e)].map(t=>t.toString(16).padStart(2,"0")).join("")}};u(c,"crypto",globalThis.crypto.subtle),u(c,"base32",{50:26,51:27,52:28,53:29,54:30,55:31,65:0,66:1,67:2,68:3,69:4,70:5,71:6,72:7,73:8,74:9,75:10,76:11,77:12,78:13,79:14,80:15,81:16,82:17,83:18,84:19,85:20,86:21,87:22,88:23,89:24,90:25});export{c as TOTP};
//# sourceMappingURL=totp.mjs.map
